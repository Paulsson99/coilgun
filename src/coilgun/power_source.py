import numpy as np

from abc import ABC, abstractmethod
from dataclasses import dataclass


class PowerSource(ABC):
	"""Abstract class for a general power sorurce"""

	@abstractmethod
	def current(self, resistance: float) -> float:
		"""Return the current generated by the power sorurce"""


@dataclass
class ConstantCurrent(PowerSource):
	"""Class for generating a constant current"""

	I: float 	# The constant current supplied by the power source. Measured in Ampere

	def current(self, resistance: float) -> float:
		return self.I


@dataclass
class ConstantVoltage(PowerSource):
	"""Class for generating a current from a constant voltage"""

	voltage: float 	# The constant voltage over the power source. Measured in Volt

	def current(self, resistance: float) -> float:
		return self.voltage / resistance